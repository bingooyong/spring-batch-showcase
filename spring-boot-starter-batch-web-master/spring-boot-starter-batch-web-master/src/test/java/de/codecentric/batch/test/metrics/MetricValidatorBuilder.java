// CHECKSTYLE:OFF
/**
 * Source code generated by Fluent Builders Generator
 * Do not modify this file
 * See generator home page at: http://code.google.com/p/fluent-builders-generator-eclipse-plugin/
 */

package de.codecentric.batch.test.metrics;

import org.springframework.batch.item.ExecutionContext;

public class MetricValidatorBuilder extends
		MetricValidatorBuilderBase<MetricValidatorBuilder> {
	public static MetricValidatorBuilder metricValidator() {
		return new MetricValidatorBuilder();
	}

	public MetricValidatorBuilder() {
		super(new MetricValidator());
	}

	public MetricValidator build() {
		return getInstance();
	}
}

class MetricValidatorBuilderBase<GeneratorT extends MetricValidatorBuilderBase<GeneratorT>> {
	private MetricValidator instance;

	protected MetricValidatorBuilderBase(MetricValidator aInstance) {
		instance = aInstance;
	}

	protected MetricValidator getInstance() {
		return instance;
	}

	@SuppressWarnings("unchecked")
	public GeneratorT withExecutionContext(ExecutionContext aValue) {
		instance.setExecutionContext(aValue);

		return (GeneratorT) this;
	}

	@SuppressWarnings("unchecked")
	public GeneratorT withBeforeChunkCount(long aValue) {
		instance.setBeforeChunkCount(aValue);

		return (GeneratorT) this;
	}

	@SuppressWarnings("unchecked")
	public GeneratorT withAfterChunkCount(long aValue) {
		instance.setAfterChunkCount(aValue);

		return (GeneratorT) this;
	}

	@SuppressWarnings("unchecked")
	public GeneratorT withChunkErrorCount(long aValue) {
		instance.setChunkErrorCount(aValue);

		return (GeneratorT) this;
	}

	@SuppressWarnings("unchecked")
	public GeneratorT withStreamOpenCount(long aValue) {
		instance.setStreamOpenCount(aValue);

		return (GeneratorT) this;
	}

	@SuppressWarnings("unchecked")
	public GeneratorT withStreamUpdateCount(long aValue) {
		instance.setStreamUpdateCount(aValue);

		return (GeneratorT) this;
	}

	@SuppressWarnings("unchecked")
	public GeneratorT withStreamCloseCount(long aValue) {
		instance.setStreamCloseCount(aValue);

		return (GeneratorT) this;
	}

	@SuppressWarnings("unchecked")
	public GeneratorT withBeforeReadCount(long aValue) {
		instance.setBeforeReadCount(aValue);

		return (GeneratorT) this;
	}

	@SuppressWarnings("unchecked")
	public GeneratorT withReadCount(long aValue) {
		instance.setReadCount(aValue);

		return (GeneratorT) this;
	}

	@SuppressWarnings("unchecked")
	public GeneratorT withAfterReadCount(long aValue) {
		instance.setAfterReadCount(aValue);

		return (GeneratorT) this;
	}

	@SuppressWarnings("unchecked")
	public GeneratorT withReadErrorCount(long aValue) {
		instance.setReadErrorCount(aValue);

		return (GeneratorT) this;
	}

	@SuppressWarnings("unchecked")
	public GeneratorT withBeforeProcessCount(long aValue) {
		instance.setBeforeProcessCount(aValue);

		return (GeneratorT) this;
	}

	@SuppressWarnings("unchecked")
	public GeneratorT withProcessCount(long aValue) {
		instance.setProcessCount(aValue);

		return (GeneratorT) this;
	}

	@SuppressWarnings("unchecked")
	public GeneratorT withAfterProcessCount(long aValue) {
		instance.setAfterProcessCount(aValue);

		return (GeneratorT) this;
	}

	@SuppressWarnings("unchecked")
	public GeneratorT withProcessErrorCount(long aValue) {
		instance.setProcessErrorCount(aValue);

		return (GeneratorT) this;
	}

	@SuppressWarnings("unchecked")
	public GeneratorT withBeforeWriteCount(long aValue) {
		instance.setBeforeWriteCount(aValue);

		return (GeneratorT) this;
	}

	@SuppressWarnings("unchecked")
	public GeneratorT withWriteCount(long aValue) {
		instance.setWriteCount(aValue);

		return (GeneratorT) this;
	}

	@SuppressWarnings("unchecked")
	public GeneratorT withAfterWriteCount(long aValue) {
		instance.setAfterWriteCount(aValue);

		return (GeneratorT) this;
	}

	@SuppressWarnings("unchecked")
	public GeneratorT withWriteErrorCount(long aValue) {
		instance.setWriteErrorCount(aValue);

		return (GeneratorT) this;
	}

	@SuppressWarnings("unchecked")
	public GeneratorT withSkipInReadCount(long aValue) {
		instance.setSkipInReadCount(aValue);

		return (GeneratorT) this;
	}

	@SuppressWarnings("unchecked")
	public GeneratorT withSkipInProcessCount(long aValue) {
		instance.setSkipInProcessCount(aValue);

		return (GeneratorT) this;
	}

	@SuppressWarnings("unchecked")
	public GeneratorT withSkipInWriteCount(long aValue) {
		instance.setSkipInWriteCount(aValue);

		return (GeneratorT) this;
	}

	@SuppressWarnings("unchecked")
	public GeneratorT withValidateGauge(boolean aValue) {
		instance.setValidateGauge(aValue);

		return (GeneratorT) this;
	}
}
